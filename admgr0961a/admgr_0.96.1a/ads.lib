<?php

/////////////////////////////////////////////////////////////////////////////////
//
//  PHP Ad Manager
//  Copyright (c) 2001, Digitek Design/Chris Allen
//  http://www.digitekdesign.com/software/
//  http://admgr.sourceforge.net/
//  Email: development@digitekdesign.com
//
//  This program is free software; you can redistribute it and/or modify
//  it under the terms of the GNU General Public License as published by
//  the Free Software Foundation; either version 2 of the License, or
//  (at your option) any later version.
//
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//  GNU General Public License for more details.
//
//  You should have received a copy of the GNU General Public License
//  along with this program; if not, write to the Free Software
//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
//
/////////////////////////////////////////////////////////////////////////////////

include_once dirname(__FILE__)."/ads.cfg";

// Functions

//////////////////////////////////////////////////////////////////////////////////
// ad_getsite()
//
// Parameters:
//
// Returns:

function ad_getsite($p="") {
    global $SERVER_NAME,$REQUEST_URI,$ad_logpath_default,$ad_redir_default;

    if (empty($p)) { $p = $SERVER_NAME.$REQUEST_URI; }
    ad_connect_db();
    $qh = ad_query("select * from domains");
    $nr = ad_queryrows($qh);
    $ct = 0;
    while ($ct < $nr) {
        $d = ad_fetch($qh);
        if (stristr($p,$d[name])) {
            if (empty($d[redir])) $d[redir] = $ad_redir_default;
            if (empty($d[logpath])) $d[logpath] = $ad_logpath_default;
            return $d;
        }
        $ct++;
    }
}


//////////////////////////////////////////////////////////////////////////////////
// ad_is_localhost()
//
// Parameters:      none
//
// Returns:         true if matches a localhost, false otherwise

function ad_is_localhost() {
    global $ad_localhosts,$REMOTE_HOST,$REMOTE_ADDR;
    reset ($ad_localhosts);
    while (list ($k, $v) = each ($ad_localhosts)) {
        if (stristr($REMOTE_HOST,$v)) return TRUE;
        if (stristr($REMOTE_ADDR,$v)) return TRUE;
    }
    return FALSE;
}

//////////////////////////////////////////////////////////////////////////////////
// showad()
//
// Parameters:      adclass - class of ad to display (if not defined, will display
//                            next ad from any class)
//
// Returns:         nothing

function showad($adclass="") {
    global $ad_classes;

    if (!empty($adclass)) $cl = array_search($adclass,$ad_classes);

    $dt = strftime("%Y-%m-%d %H:%M:%S",time());
    $site = ad_getsite();

    ad_connect_db();
    $iq = "select * from ads where active = 'Y' and ".
        "expiredate > '$dt' and ".
        "(domains LIKE '%$site[domainid]%' or CHAR_LENGTH(TRIM(domains)) = 0) ";
    if (!empty($adclass)) $iq .= "and adclass = '$cl' ";

    $iq .= "order by lastdisplay";
    $qh = ad_query($iq);
    $r = ad_fetch($qh);

    // Update last display
    $qh = ad_query("update ads set lastdisplay = '$dt' WHERE adid = '$r[adid]'");

    // Add entry to mysql log
    $qh = ad_query("insert into adlog SET ".
        "adid = '$r[adid]',".
        "type = 'hit',".
        "remotehost = '$REMOTE_HOST',".
        "remoteaddr = '$REMOTE_ADDR',".
        "site = '$site[name]',".
        "entrydate = '$dt'");

    // Update hit count & logfiles (if not localhost)
    if (!ad_is_localhost()) {
        $r[hits] = $r[hits] + 1;
        $qh = ad_query("update ads SET hits = '$r[hits]' WHERE adid = '$r[adid]'");

        // If logfile is not empty and logtype includes 'hit'
        // Format: YYYY-MM-DD HH:MM:SS CLICK|HIT domain clientaddress
        if (!empty($r[logfile]) && stristr($r[logtype],'hit')) {
            if($fp = fopen($site[logpath]."/".$r[logfile],"a+")) {
                $ca = getenv("REMOTE_HOST");
                if(empty($ca)) { $ca = getenv("REMOTE_ADDR"); }
                fputs($fp,"$dt HIT $site[name] $ca\n");
                fclose($fp);
            }
        }
    }


    // Display ad
    print "\n<!-- Begin Ad -->\n";
    if (!empty($r[banner])) {
        print "<A HREF=\"$site[redir]?ad=$r[adid]&from=$site[name]\" ";
        print "onMouseOver=\"window.status='".$r[title]."'; return true;\" onMouseOut=\"window.status=''; return true;\" ";
        print "TARGET=\"_blank\"><IMG SRC=\"$r[banner]\" BORDER=0 ALT=\"$r[title]\"";
        if ($r[width] > 0) { print " WIDTH=\"$r[width]\""; }
        if ($r[height] > 0) { print " HEIGHT=\"$r[height]\""; }
        print "></A>";
    }
    if (!empty($r[trackingurl])) {
        print "<IMG BORDER=0 WIDTH=1 HEIGHT=1 SRC=\"$r[trackingurl]\">";
    }
    if (!empty($r[textad])) {
        print "<BR>";
        if (!empty($r[textadurl])) {
            print "<A HREF=\"$r[textadurl]\"";
        } else {
            print "<A HREF=\"$r[url]\"";
        }
        print " TARGET=\"_blank\">$r[textad]</A>";
    }
    print "\n<!-- End Ad -->\n";

}

//////////////////////////////////////////////////////////////////////////////////
// qpe() - quick escape variables
//
// Parameters:      takes up to ten variables passed by reference
//                  (hopefully someday PHP will allow variable argument functions
//                   to accept variables passed by reference!)
//
// Returns:         nothing, the parameters themselves are escaped

function qpe($a0="",$a1="",$a2="",$a3="",$a4="",$a5="",$a6="",$a7="",$a8="",$a9="") {
    for ($i = 0; $i < 10; $i++) {
        $q = "a$i"; ${$q} = AddSlashes(${$q});
    }
}

//////////////////////////////////////////////////////////////////////////////////
// ad_connect_db()
// ad_query()
// ad_queryrows()
// ad_fetch()
//
// These are just an easier way to access database functions

function ad_connect_db() {
    global $ad_db_host,$ad_db_user,$ad_db_pass;
    mysql_pconnect($ad_db_host,$ad_db_user,$ad_db_pass);
}
function ad_query($str) {
    global $ad_db_db;
    return mysql($ad_db_db,$str);
}
function ad_queryrows($qh) {
    return mysql_num_rows($qh);
}
function ad_fetch($qh) {
    return mysql_fetch_array($qh);
}

?>
